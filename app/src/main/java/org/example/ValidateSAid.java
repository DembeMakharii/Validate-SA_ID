/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
public class ValidateSAid {
public static boolean isValid(String idNumber) {
    //basic validation
    if (idNumber == null || idNumber.length() != 13 || !idNumber.matches("\\d+")) {
        return false;
    }
    // Date validation (YYMMDD)
    if (!isValidDate(idNumber.substring(0, 6))) {
        return false;
    }
    // Citizenship validation (digit 10)
    int citizenshipDigit = Character.getNumericValue(idNumber.charAt(10));
    if (citizenshipDigit != 0 && citizenshipDigit != 1) {
        return false;
    }
//  Algorithm validation
return isValidLuh(idNumber);
}


private static boolean isValidDate(String dateStr) {
    try {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyMMdd");
        LocalDate.parse(dateStr, formatter);
        return true;
    } catch (DateTimeParseException e) {
        return false;
    } 
}
private static boolean isValidLuh(String idNumber) {
    int sum = 0;
    for (int i = 0; i < 12; i++) {
        int digit = Character.getNumericValue(idNumber.charAt(i));
        int weight = (i % 2 == 0) ? 1 : 2;
        int product = digit * weight;
        sum += (product > 9) ? product - 9 : product;
    }
    int checkDigit = Character.getNumericValue(idNumber.charAt(12));
    return (10 - (sum % 10)) % 10 == checkDigit;
}
}
